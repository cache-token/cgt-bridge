/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RedeemTransfer,
  RedeemTransferInterface,
} from "../RedeemTransfer";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_CGT",
        type: "address",
      },
      {
        internalType: "address",
        name: "_childTunnelContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_redeemAddr",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "FundsRedeemed",
    type: "event",
  },
  {
    inputs: [],
    name: "CGT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "childTunnelContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "redeemAddr",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawAllCGT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516105f83803806105f883398181016040528101906100329190610139565b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff16815250508073ffffffffffffffffffffffffffffffffffffffff1660c08173ffffffffffffffffffffffffffffffffffffffff168152505050505061018c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610106826100db565b9050919050565b610116816100fb565b811461012157600080fd5b50565b6000815190506101338161010d565b92915050565b600080600060608486031215610152576101516100d6565b5b600061016086828701610124565b935050602061017186828701610124565b925050604061018286828701610124565b9150509250925092565b60805160a05160c0516104236101d56000396000818160b701526101fa01526000818161019d01526102a601526000818160db0152818161010101526101d901526104236000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063054ae384146100515780637a95f1741461006f578063eb284f951461008d578063ec36ed2714610097575b600080fd5b6100596100b5565b6040516100669190610309565b60405180910390f35b6100776100d9565b6040516100849190610309565b60405180910390f35b6100956100fd565b005b61009f6102a4565b6040516100ac9190610309565b60405180910390f35b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101589190610309565b602060405180830381865afa158015610175573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610199919061035f565b90507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c3b35a7e7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000846040518463ffffffff1660e01b81526004016102389392919061039b565b600060405180830381600087803b15801561025257600080fd5b505af1158015610266573d6000803e3d6000fd5b505050507ffad70904a6915b06889693773da7af42e61ec46cbb7687d942a0421ab6b041568160405161029991906103d2565b60405180910390a150565b7f000000000000000000000000000000000000000000000000000000000000000081565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f3826102c8565b9050919050565b610303816102e8565b82525050565b600060208201905061031e60008301846102fa565b92915050565b600080fd5b6000819050919050565b61033c81610329565b811461034757600080fd5b50565b60008151905061035981610333565b92915050565b60006020828403121561037557610374610324565b5b60006103838482850161034a565b91505092915050565b61039581610329565b82525050565b60006060820190506103b060008301866102fa565b6103bd60208301856102fa565b6103ca604083018461038c565b949350505050565b60006020820190506103e7600083018461038c565b9291505056fea26469706673582212201a07737b183ecddfd4f6dcbe7fd35796e7652592ec700a1ce8e14538ec952f2064736f6c634300080b0033";

export class RedeemTransfer__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _CGT: string,
    _childTunnelContract: string,
    _redeemAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RedeemTransfer> {
    return super.deploy(
      _CGT,
      _childTunnelContract,
      _redeemAddr,
      overrides || {}
    ) as Promise<RedeemTransfer>;
  }
  getDeployTransaction(
    _CGT: string,
    _childTunnelContract: string,
    _redeemAddr: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _CGT,
      _childTunnelContract,
      _redeemAddr,
      overrides || {}
    );
  }
  attach(address: string): RedeemTransfer {
    return super.attach(address) as RedeemTransfer;
  }
  connect(signer: Signer): RedeemTransfer__factory {
    return super.connect(signer) as RedeemTransfer__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedeemTransferInterface {
    return new utils.Interface(_abi) as RedeemTransferInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RedeemTransfer {
    return new Contract(address, _abi, signerOrProvider) as RedeemTransfer;
  }
}
