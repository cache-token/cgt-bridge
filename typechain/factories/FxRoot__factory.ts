/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { FxRoot, FxRootInterface } from "../FxRoot";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stateSender",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fxChild",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiver",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "sendMessageToChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_fxChild",
        type: "address",
      },
    ],
    name: "setFxChild",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stateSender",
    outputs: [
      {
        internalType: "contract IStateSender",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161071d38038061071d833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610606806101176000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063450d11f014610051578063b47204771461006f578063b86cfdcf1461008b578063cb10f94c146100a7575b600080fd5b6100596100c5565b60405161006691906102ce565b60405180910390f35b61008960048036038101906100849190610384565b6100eb565b005b6100a560048036038101906100a091906103e4565b6101ca565b005b6100af610269565b6040516100bc9190610470565b60405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60003384848460405160200161010494939291906104e9565b604051602081830303815290604052905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166316f19831600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016101929291906105a0565b600060405180830381600087803b1580156101ac57600080fd5b505af11580156101c0573d6000803e3d6000fd5b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461022557600080fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102b88261028d565b9050919050565b6102c8816102ad565b82525050565b60006020820190506102e360008301846102bf565b92915050565b600080fd5b600080fd5b6102fc816102ad565b811461030757600080fd5b50565b600081359050610319816102f3565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103445761034361031f565b5b8235905067ffffffffffffffff81111561036157610360610324565b5b60208301915083600182028301111561037d5761037c610329565b5b9250929050565b60008060006040848603121561039d5761039c6102e9565b5b60006103ab8682870161030a565b935050602084013567ffffffffffffffff8111156103cc576103cb6102ee565b5b6103d88682870161032e565b92509250509250925092565b6000602082840312156103fa576103f96102e9565b5b60006104088482850161030a565b91505092915050565b6000819050919050565b600061043661043161042c8461028d565b610411565b61028d565b9050919050565b60006104488261041b565b9050919050565b600061045a8261043d565b9050919050565b61046a8161044f565b82525050565b60006020820190506104856000830184610461565b92915050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b60006104c8838561048b565b93506104d583858461049c565b6104de836104ab565b840190509392505050565b60006060820190506104fe60008301876102bf565b61050b60208301866102bf565b818103604083015261051e8184866104bc565b905095945050505050565b600081519050919050565b60005b83811015610552578082015181840152602081019050610537565b83811115610561576000848401525b50505050565b600061057282610529565b61057c818561048b565b935061058c818560208601610534565b610595816104ab565b840191505092915050565b60006040820190506105b560008301856102bf565b81810360208301526105c78184610567565b9050939250505056fea264697066735822122079a78b5fee6049cc2f78f8923f839230025ccfcf92b1cc129345808817c8a42464736f6c634300080b0033";

export class FxRoot__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FxRoot> {
    return super.deploy(_stateSender, overrides || {}) as Promise<FxRoot>;
  }
  getDeployTransaction(
    _stateSender: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stateSender, overrides || {});
  }
  attach(address: string): FxRoot {
    return super.attach(address) as FxRoot;
  }
  connect(signer: Signer): FxRoot__factory {
    return super.connect(signer) as FxRoot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FxRootInterface {
    return new utils.Interface(_abi) as FxRootInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): FxRoot {
    return new Contract(address, _abi, signerOrProvider) as FxRoot;
  }
}
